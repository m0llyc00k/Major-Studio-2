{"remainingRequest":"/Users/molly_s4/Desktop/code/Thesis_folders/Thesis-2022/vue-app-mc/node_modules/@vue/cli-service/node_modules/vue-loader-v16/dist/index.js??ref--1-1!/Users/molly_s4/Desktop/code/Thesis_folders/Thesis-2022/vue-app-mc/src/components/arcTimeline.vue?vue&type=template&id=1c8449a5","dependencies":[{"path":"/Users/molly_s4/Desktop/code/Thesis_folders/Thesis-2022/vue-app-mc/src/components/arcTimeline.vue","mtime":1663635091796},{"path":"/Users/molly_s4/Desktop/code/Thesis_folders/Thesis-2022/vue-app-mc/node_modules/babel-loader/lib/index.js","mtime":1658193980303},{"path":"/Users/molly_s4/Desktop/code/Thesis_folders/Thesis-2022/vue-app-mc/node_modules/@vue/cli-service/node_modules/vue-loader-v16/dist/templateLoader.js","mtime":1658193980632},{"path":"/Users/molly_s4/Desktop/code/Thesis_folders/Thesis-2022/vue-app-mc/node_modules/cache-loader/dist/cjs.js","mtime":1658193979907},{"path":"/Users/molly_s4/Desktop/code/Thesis_folders/Thesis-2022/vue-app-mc/node_modules/@vue/cli-service/node_modules/vue-loader-v16/dist/index.js","mtime":1658193980316}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:CiAgPFNjcm9sbGFtYSA6b2Zmc2V0PSIwLjkiIEBzdGVwLWVudGVyPSJhcmNIYW5kbGVyIj4KICAgIDxzdmcgOmhlaWdodD0iaGVpZ2h0IiA6d2lkdGg9IndpZHRoIiBjbGFzcz0iYXJjIiBzdHlsZT0icGFkZGluZy10b3A6IDEwMHB4Ij4KICAgICAgPGcgY2xhc3M9ImFyYyI+PC9nPgogICAgPC9zdmc+CiAgICA8ZGl2IGNsYXNzPSJzdGVwIHN0ZXAtYXJjIiB2LWZvcj0ibGluayBpbiBsaW5rcyIgOmtleT0ibGluayI+CiAgICAgIDxkaXYgY2xhc3M9InN0ZXAtdGV4dCI+CiAgICAgICAgPGgyIGNsYXNzPSJzdGVwLXRpdGxlIj57eyBsaW5rLnRpdGxlIH19PC9oMj4KICAgICAgICA8ZGl2IGNsYXNzPSJmbGV4LWNvbnRhaW5lciI+CiAgICAgICAgICA8ZGl2IGNsYXNzPSJmbGV4LWNoaWxkIj4KICAgICAgICAgICAgPGgzIGNsYXNzPSJ5ZWFyLXRleHQiPnt7IGxpbmsueWVhcjEgfX08L2gzPgogICAgICAgICAgICA8cCBjbGFzcz0idGltZWxpbmUtZGVzYyI+e3sgbGluay50ZXh0MSB9fTwvcD4KICAgICAgICAgIDwvZGl2PgogICAgICAgICAgPGRpdiBjbGFzcz0iZmxleC1jaGlsZCI+CiAgICAgICAgICAgIDxoMyBjbGFzcz0ieWVhci10ZXh0Ij57eyBsaW5rLnllYXIyIH19PC9oMz4KICAgICAgICAgICAgPHAgY2xhc3M9InRpbWVsaW5lLWRlc2MiPnt7IGxpbmsudGV4dDIgfX08L3A+CiAgICAgICAgICA8L2Rpdj4KICAgICAgICA8L2Rpdj4KICAgICAgPC9kaXY+CiAgICA8L2Rpdj4KICAgIDxkaXYgY2xhc3M9InN0ZXAgc3RlcC1hcmMiPgogICAgICA8ZGl2IGNsYXNzPSJsYXN0LXN0ZXAtdGV4dCI+CiAgICAgICAgPHA+CiAgICAgICAgICBQaGFybWFjZXV0aWNhbCBjb21wYW5pZXMgYmxhbWUgPGVtPidyZWNyZWF0aW9uYWwgdXNlcnMnPC9lbT4sIGZyYW1pbmcKICAgICAgICAgIHRoZW0gYXMgY3JpbWluYWxzLDxiciAvPgogICAgICAgICAgd2hpbGUgYWR2b2NhdGluZyBmb3IgPGVtPidtZWRpY2FsIHVzZXJzJzwvZW0+LCBwb3NpdGlvbmluZyB0aGVtIGFzCiAgICAgICAgICB2aWN0aW1zLiA8YnIgLz48YnIgLz5UaGlzIG1hbmlwdWxhdGlvbiBvZiBmYWN0IHBsYXlzIGEgcm9sZSBpbiBoaXN0b3J5CiAgICAgICAgICByZXBlYXRpbmcgaXRzZWxmLCBidXQgPGJyIC8+CiAgICAgICAgICA8c3BhbiBjbGFzcz0iZW1waGFzaXplLWNvbG9yIgogICAgICAgICAgICA+d2hhdCByZWFsbHkgaGFwcGVucyB3aGVuIHlvdXIgYnJhaW4gYmVjb21lcyBhZGRpY3RlZCB0bwogICAgICAgICAgICBvcGlvaWRzPzwvc3BhbgogICAgICAgICAgPgogICAgICAgIDwvcD4KICAgICAgPC9kaXY+CiAgICA8L2Rpdj4KICAgIDxkaXYgY2xhc3M9InN0ZXAgc3RlcC1hcmMiPjwvZGl2PgogIDwvU2Nyb2xsYW1hPgo="},{"version":3,"sources":["/Users/molly_s4/Desktop/code/Thesis_folders/Thesis-2022/vue-app-mc/src/components/arcTimeline.vue"],"names":[],"mappings":";EACE,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;IAC/C,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;MACzE,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;IACpB,CAAC,CAAC,CAAC,CAAC,CAAC;IACL,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;MAC1D,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;QACpB,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;QAC3C,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;UACzB,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;YACrB,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;YAC1C,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC,CAAC;UAC9C,CAAC,CAAC,CAAC,CAAC,CAAC;UACL,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;YACrB,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;YAC1C,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CA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","file":"/Users/molly_s4/Desktop/code/Thesis_folders/Thesis-2022/vue-app-mc/src/components/arcTimeline.vue","sourceRoot":"","sourcesContent":["<template>\n  <Scrollama :offset=\"0.9\" @step-enter=\"arcHandler\">\n    <svg :height=\"height\" :width=\"width\" class=\"arc\" style=\"padding-top: 100px\">\n      <g class=\"arc\"></g>\n    </svg>\n    <div class=\"step step-arc\" v-for=\"link in links\" :key=\"link\">\n      <div class=\"step-text\">\n        <h2 class=\"step-title\">{{ link.title }}</h2>\n        <div class=\"flex-container\">\n          <div class=\"flex-child\">\n            <h3 class=\"year-text\">{{ link.year1 }}</h3>\n            <p class=\"timeline-desc\">{{ link.text1 }}</p>\n          </div>\n          <div class=\"flex-child\">\n            <h3 class=\"year-text\">{{ link.year2 }}</h3>\n            <p class=\"timeline-desc\">{{ link.text2 }}</p>\n          </div>\n        </div>\n      </div>\n    </div>\n    <div class=\"step step-arc\">\n      <div class=\"last-step-text\">\n        <p>\n          Pharmaceutical companies blame <em>'recreational users'</em>, framing\n          them as criminals,<br />\n          while advocating for <em>'medical users'</em>, positioning them as\n          victims. <br /><br />This manipulation of fact plays a role in history\n          repeating itself, but <br />\n          <span class=\"emphasize-color\"\n            >what really happens when your brain becomes addicted to\n            opioids?</span\n          >\n        </p>\n      </div>\n    </div>\n    <div class=\"step step-arc\"></div>\n  </Scrollama>\n</template>\n\n<script>\nimport * as d3 from \"d3\";\nimport data from \"../../timeline-data.json\";\nimport Scrollama from \"../../vue-scrollama/src/Scrollama.vue\";\nimport \"intersection-observer\";\n\n<style src=\"vue-scrollama/dist/vue-scrollama.css\"></style>;\n\nconst MAX_SVG_WIDTH = 1250;\n\nconst rectWidth = 12;\nconst rectHeight = 12;\nvar margin = { top: 20, right: 30, bottom: 20, left: 30 };\n\nexport default {\n  name: \"arcTimeline\",\n  components: {\n    Scrollama,\n  },\n\n  data() {\n    return {\n      links: data.links,\n      nodes: data.nodes,\n      currStep: 0,\n      currLink: data.links.target,\n      width: MAX_SVG_WIDTH,\n      height: 800,\n    };\n  },\n  props: {\n    data: {\n      nodes: Array,\n      links: Array,\n    },\n  },\n\n  methods: {\n    drawChart() {\n      var allNodes = this.nodes.map(function (d) {\n        return d.name;\n      });\n\n      var x = d3\n        .scalePoint()\n        .range([0, this.width - margin.right - margin.left])\n        .domain(allNodes);\n\n      var svg = d3\n        .select(\".arc\")\n        .selectAll(\"g.arc\")\n        .attr(\"width\", this.width - margin.right - margin.left)\n        .attr(\"height\", this.height + margin.top + margin.bottom)\n        .append(\"g\")\n        .attr(\"transform\", \"translate(\" + margin.left + \",\" + margin.top + \")\");\n\n      svg\n        .selectAll(\"mynodes\")\n        .data(this.nodes)\n        .enter()\n        .append(\"rect\")\n        .attr(\"id\", \"rects\")\n        .attr(\"y\", 0)\n        .attr(\"x\", function (d) {\n          return x(d.name) - rectWidth / 2;\n        })\n        .attr(\"width\", rectWidth)\n        .attr(\"height\", rectHeight)\n        .style(\"fill\", \"#b2b2b2\")\n        .attr(\"opacity\", 0.8)\n        .attr(\"id\", (d) => d.id)\n        .transition()\n        .ease(d3.easeBounce)\n        .duration((d, i) => i * 200)\n        .attr(\"y\", this.height - 752)\n        .attr(\"class\", \"timelineNodes\");\n\n      // And give them a label\n      svg\n        .selectAll(\"mylabels\")\n        .data(this.nodes)\n        .enter()\n        .append(\"text\")\n        .attr(\"y\", 30)\n        .attr(\"x\", function (d) {\n          return x(d.name);\n        })\n        .text(function (d) {\n          return d.name;\n        })\n        .style(\"text-anchor\", \"middle\")\n        .style(\"alignment-baseline\", \"middle\")\n        .style(\"font-family\", \"monospace\")\n        .style(\"font-size\", \"16px\")\n        // .style(\"font-weight\", 100)\n        .attr(\"fill\", \"#b2b2b2\")\n        .attr(\"class\", \"timelineNodes\");\n\n      //add gradient color to paths\n      var defs = svg.append(\"defs\");\n      var linearGradient = defs\n        .append(\"linearGradient\")\n        .attr(\"id\", \"linear-gradient\");\n      linearGradient\n        .attr(\"x1\", \"0%\")\n        .attr(\"y1\", \"0%\")\n        .attr(\"x2\", \"100%\")\n        .attr(\"y2\", \"0%\");\n      //Set the color for the start (0%)\n      linearGradient\n        .append(\"stop\")\n        .attr(\"offset\", \"0%\")\n        .attr(\"stop-color\", \"rgb(66,146,198)\"); //light blue\n\n      //Set the color for the end (100%)\n      linearGradient\n        .append(\"stop\")\n        .attr(\"offset\", \"100%\")\n        .attr(\"stop-color\", \"#ba8ca0\"); //light purple\n\n      // Add links between nodes. Here is the tricky part.\n      // In my input data, links are provided between nodes -id-, NOT between node names.\n      // So I have to do a link between this id and the name\n      var idToNode = {};\n      this.nodes.forEach(function (n) {\n        idToNode[n.id] = n;\n      });\n\n      // Add the links\n      function buildArc(d) {\n        const start = x(idToNode[d.source].name); // X position of start node on the X axis\n        const end = x(idToNode[d.target].name);\n\n        // X position of end node\n        const arcPath = [\n          \"M\",\n          start,\n          50, // the arc starts at the coordinate x=start, y=height-30 (where the starting node is)\n          \"A\", // This means we're gonna build an elliptical arc\n          (start - end) / 4,\n          \",\", // Next 2 lines are the coordinates of the inflexion point. Height of this point is proportional with start - end distance\n          (start - end) / 4,\n          0,\n          0,\n          \",\",\n          end < start ? 0 : 0,\n          end,\n          \",\",\n          50,\n        ] // We always want the arc on top. So if end is before start, putting 0 here turn the arc upside down.\n          .join(\" \");\n        return arcPath;\n      }\n\n      const arcs = svg\n        .selectAll(\"arcs\")\n        .data(this.links)\n        .enter()\n        .append(\"path\")\n        .style(\"fill\", \"none\")\n        .attr(\"d\", (d) => buildArc(d))\n        .attr(\"opacity\", 0.1)\n        .attr(\"stroke-width\", 1);\n\n      // do the animation; see the posts on arc animation for explanation\n      arcs\n        // hide the arcs\n        .attr(\"stroke-dasharray\", function () {\n          return this.getTotalLength();\n        })\n        .attr(\"stroke-dashoffset\", function () {\n          return this.getTotalLength();\n        })\n        .attr(\"stroke\", \"url(#linear-gradient\")\n\n        // reveal the arcs\n        .transition()\n        .duration(4000)\n        .attr(\"stroke-dashoffset\", 0);\n\n      // console.log(selectedArc);\n\n      // // hide them again\n      // .transition()\n      // .attr(\"stroke-dasharray\", function () {\n      //   return this.getTotalLength();\n      // })\n      // .attr(\"stroke-dashoffset\", function () {\n      //   return this.getTotalLength();\n      // });\n\n      return svg.node();\n    },\n\n    tracePath(index) {\n      var allNodes = this.nodes.map(function (d) {\n        return d.name;\n      });\n\n      var x = d3\n        .scalePoint()\n        .range([0, this.width - margin.right - margin.left])\n        .domain(allNodes);\n\n      var svg = d3\n        .select(\".arc\")\n        .selectAll(\"g.arc\")\n        .attr(\"width\", this.width - margin.right - margin.left)\n        .attr(\"height\", this.height + margin.top + margin.bottom)\n        .append(\"g\")\n        .attr(\"transform\", \"translate(\" + margin.left + \",\" + margin.top + \")\");\n\n      var idToNode = {};\n      this.nodes.forEach(function (n) {\n        idToNode[n.id] = n;\n      });\n\n      // Add the links\n      function buildArc(d) {\n        const start = x(idToNode[d.source].name); // X position of start node on the X axis\n        const end = x(idToNode[d.target].name);\n\n        // X position of end node\n        const arcPath = [\n          \"M\",\n          start,\n          50, // the arc starts at the coordinate x=start, y=height-30 (where the starting node is)\n          \"A\", // This means we're gonna build an elliptical arc\n          (start - end) / 4,\n          \",\", // Next 2 lines are the coordinates of the inflexion point. Height of this point is proportional with start - end distance\n          (start - end) / 4,\n          0,\n          0,\n          \",\",\n          end < start ? 0 : 0,\n          end,\n          \",\",\n          50,\n        ] // We always want the arc on top. So if end is before start, putting 0 here turn the arc upside down.\n          .join(\" \");\n        return arcPath;\n      }\n\n      const arcs = svg\n        .selectAll(\"arcs\")\n        .data(this.links.slice(index - 1, index))\n        .enter()\n        .append(\"path\")\n        .style(\"fill\", \"none\")\n        .attr(\"d\", (d) => buildArc(d))\n        .attr(\"opacity\", 1)\n        .attr(\"class\", \"drawnArc\")\n        .attr(\"stroke-width\", 5);\n\n      var currentArc = d3.selectAll(\".drawnArc\");\n      currentArc\n        .transition()\n        .ease(d3.easeLinear)\n        .duration(1000)\n        .attr(\"stroke-width\", 1)\n        .attr(\"opacity\", 0.8);\n\n      // do the animation; see the posts on arc animation for explanation\n      arcs\n        // hide the arcs\n        .attr(\"stroke-dasharray\", function () {\n          return this.getTotalLength();\n        })\n        .attr(\"stroke-dashoffset\", function () {\n          return this.getTotalLength();\n        })\n        .attr(\"stroke\", \"url(#linear-gradient\")\n\n        // reveal the arcs\n        .transition()\n        .duration(4000)\n        .attr(\"stroke-dashoffset\", 0);\n      return svg.node();\n    },\n\n    drawArcsUp(index) {\n      var allNodes = this.nodes.map(function (d) {\n        return d.name;\n      });\n\n      var x = d3\n        .scalePoint()\n        .range([0, this.width - margin.right - margin.left])\n        .domain(allNodes);\n\n      var svg = d3\n        .select(\".arc\")\n        .selectAll(\"g.arc\")\n        .attr(\"width\", this.width - margin.right - margin.left)\n        .attr(\"height\", this.height + margin.top + margin.bottom)\n        .append(\"g\")\n        .attr(\"transform\", \"translate(\" + margin.left + \",\" + margin.top + \")\");\n\n      var idToNode = {};\n      this.nodes.forEach(function (n) {\n        idToNode[n.id] = n;\n      });\n\n      // Add the links\n      function buildArc(d) {\n        const start = x(idToNode[d.source].name); // X position of start node on the X axis\n        const end = x(idToNode[d.target].name);\n\n        // X position of end node\n        const arcPath = [\n          \"M\",\n          start,\n          50, // the arc starts at the coordinate x=start, y=height-30 (where the starting node is)\n          \"A\", // This means we're gonna build an elliptical arc\n          (start - end) / 4,\n          \",\", // Next 2 lines are the coordinates of the inflexion point. Height of this point is proportional with start - end distance\n          (start - end) / 4,\n          0,\n          0,\n          \",\",\n          end < start ? 0 : 0,\n          end,\n          \",\",\n          50,\n        ] // We always want the arc on top. So if end is before start, putting 0 here turn the arc upside down.\n          .join(\" \");\n        return arcPath;\n      }\n\n      const arcs = svg\n        .selectAll(\"arcs\")\n        .data(this.links.slice(index - 2, index - 1))\n        .enter()\n        .append(\"path\")\n        .style(\"fill\", \"none\")\n        .attr(\"d\", (d) => buildArc(d))\n        .attr(\"opacity\", 1)\n        .attr(\"class\", \"drawnArc\")\n        .attr(\"stroke-width\", 5);\n\n      var currentArc = d3.selectAll(\".drawnArc\");\n      currentArc\n        .transition()\n        .ease(d3.easeLinear)\n        .duration(1000)\n        .attr(\"stroke-width\", 1)\n        .attr(\"opacity\", 0.8);\n\n      // do the animation; see the posts on arc animation for explanation\n      arcs\n        // hide the arcs\n        .attr(\"stroke-dasharray\", function () {\n          return this.getTotalLength();\n        })\n        .attr(\"stroke-dashoffset\", function () {\n          return this.getTotalLength();\n        })\n        .attr(\"stroke\", \"url(#linear-gradient\")\n\n        // reveal the arcs\n        .transition()\n        .duration(4000)\n        .attr(\"stroke-dashoffset\", 0);\n      return svg.node();\n    },\n\n    arcHandler({ element, index, direction }) {\n      // const currArc = document.getElementsByClassName(\"drawnArc\");\n      // let highlightArc = document.getElementsByClassName(\"highlight-arc\");\n      // console.log(index);\n      if (index === 0 && direction === \"down\") this.drawChart();\n      if (index === 10)\n        d3.selectAll(\".arc\").transition().duration(1000).attr(\"opacity\", 0);\n      if (index === 9 && direction === \"up\")\n        d3.selectAll(\".arc\").transition().duration(1000).attr(\"opacity\", 1);\n\n      if (index === index && direction === \"down\") this.tracePath(index);\n      if (index === index && direction === \"up\") this.drawArcsUp(index);\n\n      if (direction === \"down\") element.classList.add(\"active\");\n      // if (index) {\n      //   let highlightArc = document.getElementsByClassName(\"highlight-arc\");\n      //   if (highlightArc.length == 0) {\n      //     currArc[index - 1].classList.add(\"highlight-arc\");\n      //   } else {\n      //     highlightArc[0].classList.remove(\"highlight-arc\");\n      //     currArc[index - 1].classList.add(\"highlight-arc\");\n      //   }\n      // }\n    },\n\n    // onResize() {\n    //   this.width = Math.min(MAX_SVG_WIDTH, window.innerWidth);\n    // },\n  },\n\n  mounted() {\n    console.log(\"component mounted\");\n    // this.drawChart();\n    console.log(\"i am mounted\");\n    // console.log(this.links[0]);\n    this.currTitle = this.links[0].title;\n    // window.addEventListener(\"resize\", this.onResize);\n  },\n\n  beforeUnmount() {\n    // window.removeEventListener(\"resize\", this.onResize);\n  },\n};\n</script>\n\n\n<style>\n@import url(\"https://rsms.me/inter/inter.css\");\nhtml {\n  font-family: \"Inter\", sans-serif;\n}\n\n.para-text {\n  font-size: 1.2em;\n}\n.step-text {\n  max-width: 80%;\n  border-radius: 10px;\n  background: #151c24;\n  backface-visibility: inherit;\n  padding: 0px 10px 15px 10px;\n  pointer-events: all;\n  font-family: \"Inter var\", sans-serif;\n  /* border: 0.5px solid rgba(169, 169, 169, 0.2); */\n}\n\n.last-step-text {\n  max-width: 75%;\n  border-radius: 10px;\n  background: #151c24;\n  backface-visibility: inherit;\n  padding: 15px 25px 30px 25px;\n  font-family: \"Inter var\", sans-serif;\n  font-size: 1.2em;\n  line-height: 1.5;\n  /* border: 0.5px solid rgba(169, 169, 169, 0.2); */\n\n  box-shadow: 0 2.8px 2.2px rgba(0, 0, 0, 0.134),\n    0 6.7px 5.3px rgba(0, 0, 0, 0.048), 0 12.5px 10px rgba(0, 0, 0, 0.16),\n    0 22.3px 17.9px rgba(0, 0, 0, 0.072), 0 41.8px 33.4px rgba(0, 0, 0, 0.086),\n    0 100px 80px rgba(0, 0, 0, 0.25);\n}\n\n.step-text-intro {\n  max-width: 50%;\n  border-radius: 10px;\n  background: #212b38;\n  backface-visibility: inherit;\n  padding: 0px 10px 15px 10px;\n  pointer-events: all;\n  font-family: \"Inter var\", sans-serif;\n  border: 0.5px solid rgba(169, 169, 169, 0.2);\n}\n\n.last-step {\n  border-radius: 10px;\n  background: #212b38;\n  max-width: 60%;\n  padding: 25vh 0;\n  line-height: 1.6;\n  /* backface-visibility: inherit; */\n  padding: 20px 10px 30px 10px;\n  font-size: 18px;\n  margin: 0 25rem;\n  border: 0.5px solid rgba(169, 169, 169, 0.2);\n}\n\n.step-arc {\n  padding: 2vh 0;\n  /* height: 100vh; */\n  /* position: relative; */\n  margin: 0 3rem;\n  margin-bottom: 100vh;\n  margin-left: 5vw;\n  margin-right: 5vw;\n  display: flex;\n  /* align-items: flex-start; */\n  font-weight: 00;\n  font-size: 15px;\n  pointer-events: none;\n  /* visibility: hidden; */\n  /* opacity: 0; */\n  transform: scale(0.8);\n  transition: all 1000ms;\n  transform: translateY(60px);\n  flex-direction: column;\n  justify-content: center;\n  align-items: center;\n  position: sticky;\n  top: 0;\n}\n\n.step.active {\n  visibility: visible;\n  opacity: 1;\n  transform: translateY(0);\n  position: -webkit-sticky;\n}\n\n/* #bacdcd */\n\n.step-title {\n  color: #dfdfdf;\n  padding-bottom: 5px;\n  margin-top: 10px;\n  font-size: 20px;\n}\n\n.timeline-desc {\n  border: 0.5px solid rgba(169, 169, 169, 0.6);\n  padding: 15px;\n  margin: 12px;\n  border-radius: 10px;\n  color: #dfdfdf;\n  background: #212b38;\n}\n\n.year-text {\n  padding: 0;\n  margin: 0;\n  font-family: monospace;\n}\n\n.flex-container {\n  display: flex;\n  justify-content: center;\n  align-items: top;\n}\n\n.flex-child {\n  flex: 1;\n  /* align-items: flex-start; */\n  justify-content: center;\n  color: #cfbac4;\n}\n\n.flex-child:first-child {\n  flex: 1;\n  /* align-items: flex-start; */\n  justify-content: center;\n  color: rgb(107, 174, 214);\n}\n\n.timeline {\n  /* flex: 4; */\n  height: 100vh;\n  flex-direction: column;\n  justify-content: center;\n  align-items: center;\n  top: 10vh;\n  position: sticky;\n  display: relative;\n  padding: 15vh 0;\n  /* width: 90%; */\n  /* margin: 0 auto 30vh; */\n  /* display: flex; */\n}\n/* .previousArcs {\n\n} */\n/* \n.highlight-arc {\n  stroke-width: 2px;\n  opacity: 1;\n  stroke: yellow;\n} */\n</style>\n"]}]}