{"remainingRequest":"/Users/molly_s4/Desktop/code/Thesis_folders/Thesis-2022/vue-app-mc/node_modules/babel-loader/lib/index.js!/Users/molly_s4/Desktop/code/Thesis_folders/Thesis-2022/vue-app-mc/node_modules/@vue/cli-service/node_modules/vue-loader-v16/dist/templateLoader.js??ref--6!/Users/molly_s4/Desktop/code/Thesis_folders/Thesis-2022/vue-app-mc/node_modules/cache-loader/dist/cjs.js??ref--1-0!/Users/molly_s4/Desktop/code/Thesis_folders/Thesis-2022/vue-app-mc/node_modules/@vue/cli-service/node_modules/vue-loader-v16/dist/index.js??ref--1-1!/Users/molly_s4/Desktop/code/Thesis_folders/Thesis-2022/vue-app-mc/src/components/matMap.vue?vue&type=template&id=4d8087ec","dependencies":[{"path":"/Users/molly_s4/Desktop/code/Thesis_folders/Thesis-2022/vue-app-mc/src/components/matMap.vue","mtime":1654013595973},{"path":"/Users/molly_s4/Desktop/code/Thesis_folders/Thesis-2022/vue-app-mc/babel.config.js","mtime":1654013595891},{"path":"/Users/molly_s4/Desktop/code/Thesis_folders/Thesis-2022/vue-app-mc/node_modules/cache-loader/dist/cjs.js","mtime":1658193979907},{"path":"/Users/molly_s4/Desktop/code/Thesis_folders/Thesis-2022/vue-app-mc/node_modules/babel-loader/lib/index.js","mtime":1658193980303},{"path":"/Users/molly_s4/Desktop/code/Thesis_folders/Thesis-2022/vue-app-mc/node_modules/@vue/cli-service/node_modules/vue-loader-v16/dist/templateLoader.js","mtime":1658193980632},{"path":"/Users/molly_s4/Desktop/code/Thesis_folders/Thesis-2022/vue-app-mc/node_modules/cache-loader/dist/cjs.js","mtime":1658193979907},{"path":"/Users/molly_s4/Desktop/code/Thesis_folders/Thesis-2022/vue-app-mc/node_modules/@vue/cli-service/node_modules/vue-loader-v16/dist/index.js","mtime":1658193980316}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:"},{"version":3,"mappings":"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","names":["class","_createElementVNode","id","markerUnits","markerWidth","markerHeight","viewBox","refX","refY","orient","d","style","_hoisted_3","for","_createCommentVNode","_createElementBlock","_createVNode","_component_Scrollama","offset","onStepEnter","$options","height","$data","width","_hoisted_5","_hoisted_10","type","value","onChange","$event","_hoisted_11","_hoisted_12","_hoisted_13","_hoisted_14","_hoisted_15","_hoisted_16","_hoisted_17","_hoisted_18","_hoisted_19"],"sourceRoot":"","sources":["/Users/molly_s4/Desktop/code/Thesis_folders/Thesis-2022/vue-app-mc/src/components/matMap.vue"],"sourcesContent":["<template>\n  <div class=\"main-map\">\n    <Scrollama :offset=\"0.3\" @step-enter=\"handler\">\n      <svg\n        :height=\"mapHeight\"\n        :width=\"mapWidth\"\n        class=\"map-overlay\"\n        style=\"padding-top: 50px; padding-bottom: 0px\"\n      >\n        <defs>\n          <marker\n            id=\"arrow\"\n            markerUnits=\"strokeWidth\"\n            markerWidth=\"12\"\n            markerHeight=\"12\"\n            viewBox=\"0 0 12 12\"\n            refX=\"6\"\n            refY=\"6\"\n            orient=\"auto\"\n          >\n            <path d=\"M2,2 L10,6 L2,10 L6,6 L2,2\" style=\"fill: #dfdfdf\"></path>\n          </marker>\n        </defs>\n      </svg>\n\n      <div class=\"step\" data-step-no=\"1\">\n        <div class=\"step-map\">\n          <p class=\"map-text\">\n            As a result of the overprescription of opioids, overdoses have been\n            steadily increasing since the onset of the epidemic. The map below\n            shows national\n            <b class=\"emphasize-color-pink\"\n              >overdose deaths per 100,000 people</b\n            >\n            from 2010 - 2020.\n          </p>\n        </div>\n      </div>\n      <div class=\"step\" data-step-no=\"2\">\n        <div class=\"step-map\">\n          <div class=\"flex-container\">\n            <div class=\"map-desc\">\n              <ul>\n                <li>\n                  <p class=\"inline-title\">\n                    MAT Provider vs. Prescription Availability:\n                  </p>\n                </li>\n                <li>\n                  <input\n                    type=\"radio\"\n                    id=\"radio-pills\"\n                    value=\"pills\"\n                    @change=\"pillOpacity1\"\n                    v-model=\"medication\"\n                  />\n                  <label for=\"pills\">Pills per 100 People [2012]</label>\n                </li>\n                <li>\n                  <input\n                    type=\"radio\"\n                    id=\"radio-mat\"\n                    value=\"mat\"\n                    @change=\"matOpacity1\"\n                    v-model=\"medication\"\n                  />\n                  <label for=\"deaths\">MAT Treatment Providers [2022]</label>\n                </li>\n                <li>\n                  <input\n                    type=\"radio\"\n                    id=\"radio-death\"\n                    value=\"deaths\"\n                    @change=\"noOpacityButDeath\"\n                    v-model=\"medication\"\n                  />\n                  <label for=\"mat\">Remove MAT / Pill Overlay</label>\n                </li>\n              </ul>\n            </div>\n            <div class=\"flex-child\">\n              <p class=\"map-desc\">\n                There is a direct correlation between\n                <b class=\"emphasize-color\">pills prescribed per 100 people</b>\n                and\n                <b class=\"emphasize-color-pink\"\n                  >overdose deaths per 100,000 people</b\n                >\n                from the last decade. In counties where prescriptions were\n                higher, overdoses are also more prevelant. Alternatively, we\n                would expect <b class=\"emphasize-color\">MAT providers</b> to\n                follow the same pattern and be just as available in counties\n                that are vulnerable.\n              </p>\n            </div>\n          </div>\n        </div>\n      </div>\n      <div class=\"step\" data-step-no=\"3\">\n        <div class=\"step-map\">\n          <p class=\"map-text\">\n            As seen in the previous maps, there are not enough MAT centers to\n            sufficiently treat vulnerable counties. To make matters worse, while\n            providers can apply to treat up to 100 patients,\n            <span class=\"emphasize-color\"\n              >existing providers can typically only treat 30 patients</span\n            >\n            each within their state.\n          </p>\n        </div>\n      </div>\n      <div class=\"step\" data-step-no=\"3\">\n        <div class=\"step-map\">\n          <!-- <h2 class=\"step-title-map\">All MAT Providers:</h2> -->\n          <p class=\"provider-text\">\n            Shown here are all listed MAT providers previously accounted for...\n          </p>\n          <p class=\"source\">\n            Source: Substance Abuse and Mental Health Services Administration\n          </p>\n        </div>\n      </div>\n      <div class=\"step\" data-step-no=\"4\">\n        <div class=\"step-map\">\n          <!-- <h2 class=\"step-title-map\">\n            MAT Providers Currently Accepting New Patients:\n          </h2> -->\n          <p class=\"provider-text\">\n            ...and here are the providers who haven't met their patient limit.\n          </p>\n          <p class=\"source\">\n            Source: Substance Abuse and Mental Health Services Administration\n          </p>\n        </div>\n      </div>\n      <div class=\"step\" data-step-no=\"5\">\n        <div></div>\n      </div>\n\n      <div class=\"step\" data-step-no=\"5\"></div>\n    </Scrollama>\n  </div>\n</template>\n\n<script>\nimport * as d3 from \"d3\";\nimport jenks from \"./../jenks.js\";\nimport Scrollama from \"../../vue-scrollama/src/Scrollama.vue\";\nimport \"intersection-observer\";\n\n<style src=\"vue-scrollama/dist/vue-scrollama.css\"></style>;\n\nconst MAX_SVG_WIDTH = 1400;\n//blues\nconst colorBlue = d3.scaleQuantile().range([\n  \"rgb(222,235,247)\",\n  // \"rgb(198,219,239)\",\n  \"rgb(158,202,225)\",\n  // \"rgb(107,174,214)\",\n  \"rgb(66,146,198)\",\n  // \"rgb(33,113,181)\",\n  \"rgb(8,81,156)\",\n  // \"rgb(8,48,107)\",\n  \"rgb(3, 19, 102)\",\n]);\n\nconst blues = [\n  \"rgb(222,235,247)\",\n  // \"rgb(198,219,239)\",\n  \"rgb(158,202,225)\",\n  // \"rgb(107,174,214)\",\n  \"rgb(66,146,198)\",\n  // \"rgb(33,113,181)\",\n  \"rgb(8,81,156)\",\n  // \"rgb(8,48,107)\",\n  \"rgb(3, 19, 102)\",\n];\n\n//pinks\nconst colorPink = d3\n  .scaleQuantile()\n  .range([\"#e0cedc\", \"#d8b4d1\", \"#cf9ac5\", \"#c780b9\", \"#be64ac\"]);\n\nconst pinks = [\"#e0cedc\", \"#d8b4d1\", \"#cf9ac5\", \"#c780b9\", \"#be64ac\"];\n\nvar noDataColor = \"#253040\";\n\nconst blueLegendWidth = 22;\nconst blueLegendHeight = 135;\nconst pinkLegendWidth = 135;\nconst pinkLegendHeight = 22;\n\nconst url =\n  \"https://raw.githubusercontent.com/m0llyc00k/Thesis-2022/main/mainland_counties.json\";\n\nconst urlProviders =\n  \"https://raw.githubusercontent.com/m0llyc00k/Thesis-2022/main/vue-app-mc/MAT_edit.json\";\n\nexport default {\n  name: \"matMap\",\n  components: {\n    Scrollama,\n  },\n\n  data() {\n    return {\n      geoData: null,\n      providerData: null,\n      currStep: 0,\n      width: MAX_SVG_WIDTH,\n      mapHeight: 630,\n      mapWidth: 1200,\n      medication: null,\n      checked: null,\n    };\n  },\n\n  mounted() {\n    this.getData();\n    this.getProviderData();\n    window.addEventListener(\"resize\", this.onResize);\n  },\n\n  props: {\n    data: {\n      data: Array,\n      //   deathAccessor: Array,\n      mapHeight: Number,\n      mapWidth: Number,\n    },\n  },\n\n  computed: {\n    projection() {\n      return d3\n        .geoAlbersUsa()\n        .translate([this.mapWidth / 2, this.mapHeight / 2])\n        .scale([1300]);\n    },\n    path() {\n      return d3.geoPath().projection(this.projection);\n    },\n  },\n\n  methods: {\n    async getData() {\n      await d3.json(url).then((geojson) => {\n        const geoData = geojson.features;\n        this.geoData = geoData;\n        this.drawDeaths();\n        this.drawPills();\n        this.drawMat();\n        this.drawBaseMap();\n\n        d3.selectAll(\"#deaths-overlay\").attr(\"visibility\", \"hidden\");\n        d3.selectAll(\"#pill-overlay\").attr(\"visibility\", \"hidden\");\n        d3.selectAll(\"#mat-overlay\").attr(\"visibility\", \"hidden\");\n\n        if (geojson.features) {\n          console.log(\"Number of features:\", geojson.features.length);\n          // console.log(geoData);\n        }\n      });\n    },\n\n    async getProviderData() {\n      await d3.json(urlProviders).then((json) => {\n        const data = json;\n        this.providerData = data;\n      });\n    },\n\n    drawDeaths() {\n      var deathGroup = d3\n        .select(\".map-overlay\")\n        .append(\"g\")\n        .attr(\"id\", \"death-group\");\n\n      // calculate jenks natural breaks'\n      const numberOfClasses = colorPink.range().length;\n      const jenksNaturalBreaks = jenks(\n        this.geoData.map((d) => d.properties.DEATHSPER),\n        numberOfClasses\n      );\n\n      // set the domain of the color scale based on our data\n      colorPink.domain(jenksNaturalBreaks);\n\n      deathGroup\n        .selectAll(\"path\")\n        .data(this.geoData)\n        .enter()\n        .append(\"path\")\n        .attr(\"d\", this.path)\n        .attr(\"stroke\", \"none\")\n        .attr(\"fill\", function (d) {\n          if (d.properties.DEATHSPER != null) {\n            return colorPink(d.properties.DEATHSPER);\n          } else {\n            return noDataColor;\n          }\n        })\n        .attr(\"opacity\", 1)\n        // .style(\"mix-blend-mode\", \"multiply\")\n        .attr(\"id\", \"deaths-overlay\");\n\n      var deathSvg = d3.select(\".map-overlay\");\n\n      jenksNaturalBreaks.map((d, i) =>\n        deathSvg\n          .append(\"text\")\n          .attr(\"x\", 10)\n          .attr(\"y\", i * 24 + 475)\n          .text(\n            jenksNaturalBreaks[i - 1] === undefined\n              ? \"\"\n              : Number(jenksNaturalBreaks[i - 1]) + \" - \" + d\n          )\n          .style(\"fill\", \"#dfdfdf\")\n          .style(\"font-size\", \"10px\")\n          .attr(\"alignment-baseline\", \"middle\")\n          .attr(\"class\", \"death-legend\")\n      );\n\n      ///pink legend for deaths\n      pinks.map(\n        (d, i) =>\n          deathSvg\n            .append(\"rect\")\n            .attr(\"x\", 65)\n            .attr(\"y\", i * 22 + 490)\n            .attr(\"width\", pinkLegendWidth)\n            .attr(\"height\", pinkLegendHeight)\n            .style(\"fill\", d)\n            .attr(\"opacity\", 1)\n            .attr(\"class\", \"death-legend\")\n        // .attr(\"class\", \"multiplied\")\n      );\n\n      ///draw arrow///\n      deathSvg\n        .append(\"line\")\n        .attr(\"x1\", 215)\n        .attr(\"y1\", 490)\n        .attr(\"x2\", 215)\n        .attr(\"y2\", 595)\n        .attr(\"stroke\", \"#dfdfdf\")\n        .attr(\"stroke-width\", 1)\n        .attr(\"class\", \"death-legend\")\n\n        .attr(\"marker-end\", \"url(#arrow)\");\n\n      ///title for arrow\n      deathSvg\n        .append(\"text\")\n        .text(\"High Death Rate\")\n        .attr(\"x\", -580)\n        .attr(\"y\", 227)\n        .attr(\"transform\", \"rotate(-90)\")\n        .style(\"fill\", \"#dfdfdf\")\n        .style(\"font-size\", \"10px\")\n        .attr(\"alignment-baseline\", \"middle\")\n        .attr(\"class\", \"death-legend\");\n\n      d3.selectAll(\".death-legend\").attr(\"visibility\", \"hidden\");\n    },\n\n    drawPills() {\n      var svgPill = d3\n        .select(\".map-overlay\")\n        .append(\"svg\")\n        .attr(\"width\", this.mapWidth)\n        .attr(\"height\", this.mapHeight)\n        .attr(\"id\", \"pill-overlay\");\n\n      // .attr(\"viewBox\", [0, 0, 975, 610]);\n\n      var pillGroup = svgPill.append(\"g\").attr(\"id\", \"pill-group\");\n\n      // calculate jenks natural breaks'\n      const numberOfClasses = colorBlue.range().length;\n      const jenksNaturalBreaksPills = jenks(\n        this.geoData.map((d) => d.properties.PILLS),\n        numberOfClasses\n      );\n\n      // set the domain of the color scale based on our data\n      colorBlue.domain(jenksNaturalBreaksPills);\n\n      pillGroup\n        .selectAll(\"path\")\n        .data(this.geoData)\n        .enter()\n        .append(\"path\")\n        .attr(\"d\", this.path)\n        .attr(\"class\", function (d) {\n          if (d.properties.PILLS != null && d.properties.DEATHSPER == null) {\n            return \"notMultiplied\";\n          } else if (\n            d.properties.PILLS == null &&\n            d.properties.DEATHSPER == null\n          ) {\n            return \"opacity0\";\n          } else {\n            return \"multiplied\";\n          }\n        })\n        .attr(\"stroke\", \"none\")\n        .attr(\"fill\", function (d) {\n          if (d.properties.PILLS != null) {\n            return colorBlue(d.properties.PILLS);\n          } else {\n            return noDataColor;\n          }\n        })\n        .attr(\"id\", \"pill-overlay\");\n\n      var pillSvg = d3.select(\".map-overlay\");\n\n      ///legend text\n      jenksNaturalBreaksPills.map((d, i) =>\n        pillSvg\n          .append(\"text\")\n          .attr(\"x\", -450)\n          .attr(\"y\", i * 24 + 75)\n          .attr(\"transform\", \"rotate(-90)\")\n          .text(\n            jenksNaturalBreaksPills[i - 1] === undefined\n              ? \"\"\n              : Number(jenksNaturalBreaksPills[i - 1]) + \" - \" + d\n          )\n          .style(\"fill\", \"#dfdfdf\")\n          .style(\"font-size\", \"10px\")\n          .attr(\"alignment-baseline\", \"middle\")\n          .attr(\"class\", \"pill-legend\")\n      );\n\n      ///create blues\n      blues.map((d, i) =>\n        pillSvg\n          .append(\"rect\")\n          .attr(\"x\", i * 22 + 90)\n          .attr(\"y\", 465)\n          .attr(\"width\", blueLegendWidth)\n          .attr(\"height\", blueLegendHeight)\n          .style(\"fill\", d)\n          .style(\"mix-blend-mode\", \"multiply\")\n          .attr(\"class\", \"pill-legend\")\n          .attr(\"opacity\", 0.75)\n      );\n      // .attr(\"class\", \"pill-legend\");\n\n      ///draw arrow\n      pillSvg\n        .append(\"line\")\n        .attr(\"x1\", 90)\n        .attr(\"y1\", 610)\n        .attr(\"x2\", 195)\n        .attr(\"y2\", 610)\n        .attr(\"stroke\", \"#dfdfdf\")\n        .attr(\"stroke-width\", 1)\n        .attr(\"marker-end\", \"url(#arrow)\")\n        .attr(\"class\", \"pill-legend\");\n\n      ///title for arrow\n      pillSvg\n        .append(\"text\")\n        .text(\"High Pill Rate\")\n        .attr(\"x\", 110)\n        .attr(\"y\", 625)\n        .style(\"fill\", \"#dfdfdf\")\n        .style(\"font-size\", \"10px\")\n        .attr(\"alignment-baseline\", \"middle\")\n        .attr(\"class\", \"pill-legend\");\n\n      d3.selectAll(\".pill-legend\").attr(\"visibility\", \"hidden\");\n    },\n\n    drawMat() {\n      var svgMat = d3\n        .select(\".map-overlay\")\n        .append(\"svg\")\n        .attr(\"width\", this.mapWidth)\n        .attr(\"height\", this.mapHeight)\n        .attr(\"id\", \"mat-overlay\");\n\n      var matGroup = svgMat.append(\"g\").attr(\"id\", \"mat-group\");\n\n      // calculate jenks natural breaks\n      const numberOfClasses = colorBlue.range().length;\n      const jenksNaturalBreaksMat = jenks(\n        this.geoData.map((d) => d.properties.MAT),\n        numberOfClasses\n      );\n\n      // set the domain of the color scale based on our data\n      colorBlue.domain(jenksNaturalBreaksMat);\n\n      matGroup\n        .selectAll(\"path\")\n        .data(this.geoData)\n        .enter()\n        .append(\"path\")\n        .attr(\"d\", this.path)\n        .attr(\"class\", function (d) {\n          if (d.properties.MAT != null && d.properties.DEATHSPER != null) {\n            return \"multiplied-mat\";\n          } else {\n            return \"notMultiplied-mat\";\n          }\n        })\n        .attr(\"stroke\", \"none\")\n        .attr(\"fill\", function (d) {\n          if (d.properties.MAT != null) {\n            return colorBlue(d.properties.MAT);\n          } else {\n            return noDataColor;\n          }\n        })\n        .attr(\"id\", \"mat-overlay\");\n\n      jenksNaturalBreaksMat.map((d, i) =>\n        svgMat\n          .append(\"text\")\n          .attr(\"x\", -450)\n          .attr(\"y\", i * 24 + 75)\n          .attr(\"transform\", \"rotate(-90)\")\n          .text(\n            jenksNaturalBreaksMat[i - 1] === undefined\n              ? \"\"\n              : Number(jenksNaturalBreaksMat[i - 1]) + \" - \" + d\n          )\n          .style(\"fill\", \"#dfdfdf\")\n          .style(\"font-size\", \"10px\")\n          .attr(\"alignment-baseline\", \"middle\")\n          .attr(\"class\", \"mat-legend\")\n      );\n\n      ///blue legend rects\n      blues.map((d, i) =>\n        svgMat\n          .append(\"rect\")\n          .attr(\"x\", i * 22 + 90)\n          .attr(\"y\", 465)\n          .attr(\"opacity\", 0.75)\n          .attr(\"width\", blueLegendWidth)\n          .attr(\"height\", blueLegendHeight)\n          .style(\"fill\", d)\n          .style(\"mix-blend-mode\", \"multiply\")\n          .attr(\"class\", \"mat-legend\")\n      );\n\n      svgMat\n        .append(\"line\")\n        .attr(\"x1\", 90)\n        .attr(\"y1\", 610)\n        .attr(\"x2\", 195)\n        .attr(\"y2\", 610)\n        .attr(\"stroke\", \"#dfdfdf\")\n        .attr(\"stroke-width\", 1)\n        .attr(\"marker-end\", \"url(#arrow)\")\n        .attr(\"class\", \"mat-legend\");\n\n      ///title for arrow\n      svgMat\n        .append(\"text\")\n        .text(\"High MAT Rate\")\n        .attr(\"x\", 110)\n        .attr(\"y\", 625)\n        .style(\"fill\", \"#dfdfdf\")\n        .style(\"font-size\", \"10px\")\n        .attr(\"alignment-baseline\", \"middle\")\n        .attr(\"class\", \"mat-legend\");\n\n      d3.selectAll(\".mat-legend\").attr(\"visibility\", \"hidden\");\n    },\n\n    drawBaseMap() {\n      var svgProvider = d3\n        .select(\".map-overlay\")\n        .append(\"svg\")\n        .attr(\"width\", this.mapWidth)\n        .attr(\"height\", this.mapHeight)\n        .attr(\"id\", \"provider-overlay\");\n\n      var providerGroup = svgProvider.append(\"g\").attr(\"id\", \"provider-group\");\n      providerGroup\n        .selectAll(\"path\")\n        .data(this.geoData)\n        .enter()\n        .append(\"path\")\n        .attr(\"d\", this.path)\n        .attr(\"stroke\", \"none\")\n        .attr(\"fill\", noDataColor)\n        .attr(\"id\", \"provider-overlay\");\n\n      d3.selectAll(\"#deaths-overlay\").attr(\"visibility\", \"hidden\");\n      d3.selectAll(\"#pill-overlay\").attr(\"visibility\", \"hidden\");\n      d3.selectAll(\"#mat-overlay\").attr(\"visibility\", \"hidden\");\n      d3.selectAll(\"#provider-overlay\").attr(\"visibility\", \"hidden\");\n    },\n\n    drawProviders() {\n      d3.selectAll(\"#provider-overlay\").attr(\"visibility\", \"visible\");\n\n      var svgProvider = d3.select(\"#provider-overlay\");\n\n      svgProvider\n        .append(\"g\")\n        .selectAll(\"circle\")\n        .data(this.providerData)\n        .join(\"circle\")\n        .attr(\n          \"transform\",\n          (d) => \"translate(\" + this.projection([d.longitude, d.latitude]) + \")\"\n        )\n        .attr(\"mix-blend-mode\", \"multiply\")\n        .attr(\"r\", 1.2)\n        .attr(\"fill\", \"#be64ac\")\n        .attr(\"opacity\", 0.6)\n        .attr(\"class\", \"all-providers\");\n    },\n\n    drawProvidersAvail() {\n      d3.selectAll(\"#provider-overlay\").attr(\"visibility\", \"visible\");\n\n      var svgProvider = d3.select(\"#provider-overlay\");\n      var allProviders = d3.selectAll(\".all-providers\");\n      var availData = Array.from(\n        this.providerData.filter(function (d) {\n          return d.reachedPatientLimit === \"N\";\n        })\n      );\n      allProviders.remove();\n\n      svgProvider\n        .append(\"g\")\n        .selectAll(\"circle\")\n        .data(availData)\n        .join(\"circle\")\n        .attr(\n          \"transform\",\n          (d) => \"translate(\" + this.projection([d.longitude, d.latitude]) + \")\"\n        )\n        .attr(\"r\", 1.2)\n        .attr(\"fill\", \"#be64ac\")\n        .attr(\"opacity\", 0.6)\n        .attr(\"class\", \"provider-avail\");\n    },\n\n    providerMap0() {\n      d3.selectAll(\"#provider-overlay\").attr(\"visibility\", \"hidden\");\n      d3.selectAll(\".provider-avail\").attr(\"visibility\", \"hidden\");\n      d3.selectAll(\".all-providers\").attr(\"visibility\", \"hidden\");\n      d3.selectAll(\".pill-legend\").attr(\"visibility\", \"hidden\");\n      d3.selectAll(\".mat-legend\").attr(\"visibility\", \"hidden\");\n      d3.selectAll(\".death-legend\").attr(\"visibility\", \"hidden\");\n    },\n\n    // deathOpacity1() {\n    //   d3.selectAll(\"#deaths-overlay\").attr(\"visibility\", \"visible\");\n    //   document.getElementById(\"radio-mat\").checked = false;\n    //   document.getElementById(\"radio-pills\").checked = false;\n    //   document.getElementById(\"radio-death\").checked = true;\n    // },\n\n    deathOpacity0() {\n      d3.selectAll(\"#deaths-overlay\").attr(\"visibility\", \"hidden\");\n      d3.selectAll(\".death-legend\").attr(\"visibility\", \"hidden\");\n    },\n\n    //remove all items except for overdose base map, return radio buttons to default\n    noOpacityButDeath() {\n      d3.selectAll(\"#deaths-overlay\").attr(\"visibility\", \"visible\");\n      d3.selectAll(\"#mat-overlay\").attr(\"visibility\", \"hidden\");\n      d3.selectAll(\"#pill-overlay\").attr(\"visibility\", \"hidden\");\n      d3.selectAll(\".pill-legend\").attr(\"visibility\", \"hidden\");\n      d3.selectAll(\".mat-legend\").attr(\"visibility\", \"hidden\");\n      d3.selectAll(\".death-legend\").attr(\"visibility\", \"visible\");\n      document.getElementById(\"radio-mat\").checked = false;\n      document.getElementById(\"radio-pills\").checked = false;\n      document.getElementById(\"radio-death\").checked = true;\n    },\n\n    /// function for Pill radio button\n    pillOpacity1() {\n      d3.selectAll(\"#mat-overlay\").attr(\"visibility\", \"hidden\");\n      d3.selectAll(\"#pill-overlay\").attr(\"visibility\", \"visible\");\n      d3.selectAll(\".pill-legend\").attr(\"visibility\", \"visible\");\n      d3.selectAll(\".mat-legend\").attr(\"visibility\", \"hidden\");\n    },\n\n    /// function for MAT radio button\n    matOpacity1() {\n      d3.selectAll(\"#pill-overlay\").attr(\"visibility\", \"hidden\");\n      d3.selectAll(\"#mat-overlay\").attr(\"visibility\", \"visible\");\n      d3.selectAll(\".mat-legend\").attr(\"visibility\", \"visible\");\n      d3.selectAll(\".pill-legend\").attr(\"visibility\", \"hidden\");\n    },\n\n    redrawBasemap() {\n      d3.selectAll(\"#pill-overlay\").attr(\"visibility\", \"hidden\");\n      d3.selectAll(\"#mat-overlay\").attr(\"visibility\", \"hidden\");\n      d3.selectAll(\"#death-overlay\").attr(\"visibility\", \"hidden\");\n      d3.selectAll(\"#provider-overlay\").attr(\"visibility\", \"visible\");\n      d3.selectAll(\".provider-avail\").attr(\"visibility\", \"hidden\");\n      d3.selectAll(\".all-providers\").attr(\"visibility\", \"hidden\");\n      d3.selectAll(\".pill-legend\").attr(\"visibility\", \"hidden\");\n      d3.selectAll(\".mat-legend\").attr(\"visibility\", \"hidden\");\n      d3.selectAll(\".death-legend\").attr(\"visibility\", \"hidden\");\n    },\n\n    allLegendsInvisible() {\n      d3.selectAll(\".death-legend\").attr(\"visibility\", \"hidden\");\n      d3.selectAll(\".pill-legend\").attr(\"visibility\", \"hidden\");\n      d3.selectAll(\".mat-legend\").attr(\"visibility\", \"hidden\");\n    },\n\n    handler({ element, index, direction }) {\n      if (index == 0) this.noOpacityButDeath(), this.providerMap0();\n      if (index == 1)\n        this.noOpacityButDeath(),\n          this.providerMap0(),\n          d3.selectAll(\".death-legend\").attr(\"visibility\", \"visible\");\n      if (index == 2)\n        this.noOpacityButDeath(),\n          this.providerMap0(),\n          d3.selectAll(\".death-legend\").attr(\"visibility\", \"visible\");\n      if (index === 3) this.redrawBasemap(), this.allLegendsInvisible();\n      if (index === 4)\n        this.drawProviders(), this.deathOpacity0(), this.allLegendsInvisible();\n      if (index === 5)\n        this.drawProvidersAvail(),\n          this.deathOpacity0(),\n          this.allLegendsInvisible();\n      if (index === 6) this.deathOpacity0(), this.allLegendsInvisible();\n      if (direction === \"down\") element.classList.add(\"active\");\n      console.log(index);\n    },\n\n    // onResize() {\n    //   this.mapWidth = Math.min(MAX_SVG_WIDTH, window.innerWidth);\n    // },\n  },\n\n  // beforeUnmount() {\n  //   window.removeEventListener(\"resize\", this.onResize);\n  // },\n};\n</script>\n\n\n<style>\n.big-bold {\n  font-size: 1.2em;\n  font-weight: 500;\n  line-height: 2;\n}\n\n#bivariate-legend {\n  position: sticky;\n}\n.emphasize-color {\n  /* color: #8097b5; */\n  color: #adcdf6;\n}\n\n.emphasize-color-pink {\n  color: #d8b4d1;\n}\n\n.inline-title {\n  padding: 0;\n  margin: 0 auto;\n  line-height: 2.5;\n  font-weight: 600;\n  font-size: 1.2em;\n  text-decoration: underline #8097b5 2px;\n  letter-spacing: 1.3px;\n}\n\nul {\n  list-style-type: none; /* Remove bullets */\n  padding: 0; /* Remove padding */\n  margin: 0; /* Remove margins */\n  line-height: 1.6;\n  margin-left: 0;\n  letter-spacing: 1.3px;\n}\n\n.radio-text {\n  line-height: 3;\n  font-size: 1.1em;\n  align-items: center;\n  margin: 0 auto;\n  padding: 0px;\n  flex-direction: column;\n  align-items: center;\n}\n\nlabel {\n  margin: 6px;\n}\n\n.step-map {\n  max-width: 80%;\n  border-radius: 10px;\n  background: #212b38;\n  backface-visibility: inherit;\n  padding: 0px 10px 15px 10px;\n  pointer-events: all;\n  font-family: \"Inter var\", sans-serif;\n  background: #151c24;\n  z-index: 9999;\n}\n\n.step-title-map {\n  color: #dfdfdf;\n  padding-bottom: 5px;\n  margin-top: 10px;\n  font-size: 20px;\n}\n\n.map-desc {\n  padding: 5px 5px 0px 5px;\n  margin: 12px;\n  border-radius: 10px;\n  color: #dfdfdf;\n  line-height: 1.4;\n  text-align: left;\n  font-size: 0.9 em;\n}\n\n.map-text {\n  padding: 10px;\n  margin: 12px;\n  /* border-radius: 10px; */\n  color: #dfdfdf;\n  font-size: 1.2em;\n  line-height: 1.5;\n  text-align: left;\n}\n\n.provider-text {\n  padding: 15px;\n  margin: 12px;\n  font-size: 1.3em;\n}\n\n.flex-container {\n  display: flex;\n  justify-content: left;\n  /* align-items: top; */\n}\n.step {\n  padding: 2vh 0;\n  /* height: 100vh; */\n  /* position: relative; */\n  margin: 0 3rem;\n  margin-bottom: 100vh;\n  margin-left: 5vw;\n  margin-right: 5vw;\n  display: flex;\n  /* align-items: flex-start; */\n  pointer-events: none;\n  /* visibility: hidden; */\n  /* opacity: 0; */\n  transform: scale(0.8);\n  transition: all 1000ms;\n  transform: translateY(60px);\n  flex-direction: column;\n  justify-content: center;\n  align-items: center;\n  position: relative;\n  top: 0;\n  z-index: 9999;\n}\n\n.step.active {\n  /* visibility: visible; */\n  opacity: 1;\n  transform: translateY(50);\n  position: -webkit-sticky;\n  z-index: 9999;\n}\n\n.multiplied {\n  mix-blend-mode: multiply;\n  opacity: 0.75;\n}\n\n.notMultiplied {\n  mix-blend-mode: normal;\n  opacity: 1;\n}\n\n.notMultiplied-mat {\n  mix-blend-mode: normal;\n  opacity: 0;\n}\n\n.multiplied-mat {\n  mix-blend-mode: multiply;\n  opacity: 0.75;\n}\n\n.opacity0 {\n  opacity: 0;\n}\n#death-overlay {\n  z-index: -1;\n}\n#mat-overlay {\n  z-index: -1;\n}\n#pill-overlay {\n  z-index: -1;\n}\n/* .path-null {\n  stroke: white;\n  stroke-width: 0.25px;\n  fill: gray;\n} */\n\n.map-overlay {\n  /* flex: 4; */\n  height: 100vh;\n  flex-direction: column;\n  justify-content: center;\n  align-items: center;\n  top: 10vh;\n  position: sticky;\n  display: relative;\n  padding: 15vh 0;\n  /* width: 90%; */\n  /* margin: 0 auto 30vh; */\n  /* display: flex; */\n}\n\n.source {\n  font-size: 0.7em;\n  font-style: italic;\n}\n</style>"]}]}